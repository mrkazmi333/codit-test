{"version":3,"sources":["actions/index.js","components/Repository.js","components/RepoList.js","components/User.js","components/Search.js","App.js","reducers/index.js","index.js"],"names":["ADD_USER_SEARCH_RESULT","ADD_REPO_SEARCH_RESULT","ADD_COMMIT_RESULT","handleUserSearch","user","url","dispatch","fetch","then","response","json","type","addUserSearchResult","handleRepoSearch","repos","addRepoSearchResult","Repository","console","log","this","props","repo","name","login","className","forks","open_issues_count","watchers","Component","connect","searchUser","RepoList","length","map","href","html_url","target","rel","id","User","src","avatar_url","alt","followers","following","Search","handleSearch","searchText","state","handleChange","e","setState","value","result","showSearchResults","repoResult","placeholder","onChange","onClick","message","App","connectedAppComponent","initialSearchState","commitResult","combineReducers","action","commits","store","createStore","rootReducer","applyMiddleware","getState","next","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbf3bd96.chunk.js","sourcesContent":["export const ADD_USER_SEARCH_RESULT = \"ADD_USER_SEARCH_RESULT\";\r\nexport const ADD_REPO_SEARCH_RESULT = \"ADD_REPO_SEARCH_RESULT\";\r\nexport const ADD_COMMIT_RESULT = \"ADD_COMMIT_RESULT\";\r\n\r\nexport function handleUserSearch(user) {\r\n  const url = `https://api.github.com/users/${user}`;\r\n  return function (dispatch) {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        // console.log(\"user\", user);\r\n        dispatch(addUserSearchResult(user));\r\n      });\r\n  };\r\n}\r\n\r\nexport function handleRepoSearch(user) {\r\n  const url = `https://api.github.com/users/${user}/repos`;\r\n  return function (dispatch) {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((repos) => {\r\n        // console.log(\"repos\", repos);\r\n        dispatch(addRepoSearchResult(repos));\r\n      });\r\n  };\r\n}\r\nexport function addRepoSearchResult(repos) {\r\n  return {\r\n    type: ADD_REPO_SEARCH_RESULT,\r\n    repos,\r\n  };\r\n}\r\n\r\nexport function addUserSearchResult(user) {\r\n  return {\r\n    type: ADD_USER_SEARCH_RESULT,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function getCommitCount(repo, user) {\r\n  const url = `https://api.github.com/repos/${user.login}/${repo.name}/contributors`;\r\n  return function (dispatch) {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((commits) => {\r\n        // console.log(\"commits\", commits);\r\n        dispatch(addCommitsResult(commits));\r\n      });\r\n  };\r\n}\r\n\r\nexport function addCommitsResult(commits) {\r\n  return {\r\n    type: ADD_COMMIT_RESULT,\r\n    commits,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCommitCount } from \"../actions\";\r\n\r\nclass Repository extends Component {\r\n  componentDidMount() {\r\n    console.log(\"check props\", this.props.repo.name);\r\n    console.log(\"user\", this.props.user.login);\r\n    // this.props.dispatch(\r\n    //   getCommitCount(this.props.repo.name, this.props.user.login)\r\n    // );\r\n  }\r\n\r\n  render() {\r\n    const { repo } = this.props;\r\n    return (\r\n      <div className=\"repository\">\r\n        <h4>{repo.name}</h4>\r\n        <p>Forks:{repo.forks}</p>\r\n        <p>Issues: {repo.open_issues_count}</p>\r\n        <p>Watchers: {repo.watchers}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ searchUser }) {\r\n  return {\r\n    searchUser,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Repository);\r\n","import React, { Component } from \"react\";\r\nimport Repository from \"./Repository\";\r\n\r\nclass RepoList extends Component {\r\n  render() {\r\n    const { repos, user } = this.props;\r\n    return (\r\n      <div className=\"repo-list-container\">\r\n        <ul>\r\n          <h4 className=\"repo-list-heading\">List of Repositories</h4>\r\n          {repos.length !== 0 ? (\r\n            repos.map((repo) => (\r\n              //   <li>\r\n              <a\r\n                href={repo.html_url}\r\n                key={repo.id}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <Repository key={repo.id} repo={repo} user={user} />\r\n              </a>\r\n              //   </li>\r\n            ))\r\n          ) : (\r\n            <p>No Repos</p>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepoList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass User extends Component {\r\n  render() {\r\n    const { user, repos } = this.props;\r\n    return (\r\n      <div className=\"user-container\">\r\n        <img src={user.avatar_url} alt=\"user-img\" />\r\n        <div className=\"user-detail\">\r\n          <h4>Name: {user.name}</h4>\r\n          <h4>Followers: {user.followers}</h4>\r\n          <h4>Following: {user.following}</h4>\r\n          <h4>Number of Public Repositories: {repos.length}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleRepoSearch, handleUserSearch } from \"../actions\";\r\nimport RepoList from \"./RepoList\";\r\nimport User from \"./User\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\",\r\n    };\r\n  }\r\n\r\n  handleSearch = () => {\r\n    const { searchText } = this.state;\r\n    this.props.dispatch(handleUserSearch(searchText));\r\n    this.props.dispatch(handleRepoSearch(searchText));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      searchText: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      result,\r\n      showSearchResults,\r\n      repoResult: repos,\r\n    } = this.props.searchUser;\r\n    // console.log(this.props.searchUser);\r\n    return (\r\n      <div>\r\n        <div className=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button onClick={this.handleSearch}>Search</button>\r\n        </div>\r\n\r\n        {result.message ? (\r\n          <p>No User Found</p>\r\n        ) : result.name ? (\r\n          <User user={result} repos={repos} />\r\n        ) : (\r\n          <p>Search User</p>\r\n        )}\r\n        {repos.message ? (\r\n          <p>No repositories found</p>\r\n        ) : repos.length !== 0 ? (\r\n          <RepoList repos={repos} user={result} />\r\n        ) : (\r\n          <p>Nothing to Display</p>\r\n        )}\r\n        {/* {result.name ? (\r\n          <User user={result} repos={repos} />\r\n        ) : (\r\n          <p>Search User</p>\r\n        )} */}\r\n        {/* {repos.length !== 0 ? (\r\n          <RepoList repos={repos} />\r\n        ) : (\r\n          <p>Nothing to display</p>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ searchUser }) {\r\n  return {\r\n    searchUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Search from \"./components/Search\";\n\nclass App extends Component {\n  render() {\n    const { searchUser } = this.props;\n    // console.log(\"search\", this.props);\n    return (\n      <div className=\"App\">\n        <Search searchUser={searchUser} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    searchUser: state.user,\n  };\n}\nconst connectedAppComponent = connect(mapStateToProps)(App);\nexport default connectedAppComponent;\n","import {\r\n  ADD_COMMIT_RESULT,\r\n  ADD_REPO_SEARCH_RESULT,\r\n  ADD_USER_SEARCH_RESULT,\r\n} from \"../actions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst initialSearchState = {\r\n  result: {},\r\n  repoResult: [],\r\n  commitResult: [],\r\n  showSearchResults: false,\r\n};\r\n\r\nexport function searchUser(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case ADD_USER_SEARCH_RESULT:\r\n      return {\r\n        ...state,\r\n        result: action.user,\r\n        showSearchResults: false,\r\n      };\r\n    case ADD_REPO_SEARCH_RESULT:\r\n      return {\r\n        ...state,\r\n        repoResult: action.repos,\r\n        showSearchResults: false,\r\n      };\r\n    case ADD_COMMIT_RESULT:\r\n      return {\r\n        ...state,\r\n        commitResult: action.commits,\r\n        showSearchResults: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  searchUser: searchUser,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport rootReducer from \"./reducers\";\n\nconst logger = ({ dispatch, getState }) => (next) => (action) => {\n  //logger code\n  // console.log(\"ACTION_TYPE = \", action.type);\n  next(action);\n};\n\nconst thunk = ({ dispatch, getState }) => (next) => (action) => {\n  if (typeof action === \"function\") {\n    action(dispatch);\n    return;\n  }\n  next(action);\n};\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n// console.log(\"Store\", store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}